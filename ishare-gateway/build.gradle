/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'org.springframework.boot' version '2.1.18.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://maven.aliyun.com/repository/public')
    }

    maven {
        url = uri('https://maven.aliyun.com/repository/spring')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}
configurations.implementation {
    exclude  group:'org.springframework.boot',module: 'spring-boot-starter-web'
}


dependencies {
    implementation ('top.dddpeter.ishare.cloud:ishare-common-core:1.0.0')
    implementation ('top.dddpeter.ishare.cloud:ishare-common-redis:1.0.0')
    implementation 'top.dddpeter.ishare.cloud:ishare-common-mongo:1.0.0'
    implementation ('top.dddpeter.ishare.job.executor:ishare-job-executor:1.0.0'){
        exclude group: 'org.slf4j', module:'slf4j-log4j12'
    }
    implementation ('org.springframework.cloud:spring-cloud-starter-gateway'){
        exclude group: 'io.projectreactor.netty', module: 'reactor-netty'
    }
    implementation 'io.projectreactor.netty:reactor-netty:0.8.23.RELEASE'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    implementation 'org.apache.commons:commons-pool2:2.6.2'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.github.penggle:kaptcha:2.3.2'
    implementation 'com.github.xiaoymin:swagger-bootstrap-ui:1.9.5'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.6.2'
    implementation 'com.alibaba:druid-spring-boot-starter:1.1.14'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.alicp.jetcache:jetcache-starter-redis-lettuce:2.5.15'
    implementation 'com.alicp.jetcache:jetcache-core:2.5.15'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'top.dddpeter.ishare.cloud:ishare-common-oss:1.0.0'
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'com.github.xiaoymin:swagger-bootstrap-ui:1.9.5'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-bean-validators:2.9.2'
    implementation 'com.alicp.jetcache:jetcache-starter-redis-lettuce:2.5.15'
    implementation 'com.alicp.jetcache:jetcache-core:2.5.15'
    implementation 'tk.mybatis:mapper-spring-boot-starter:2.1.5'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation 'org.apache.httpcomponents:httpclient:4.5.3'
    implementation 'com.alibaba:fastjson:1.2.70'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.10.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'cn.hutool:hutool-all:5.8.0'

    annotationProcessor 'org.projectlombok:lombok:1.18.24'

}
ext {
    set('springCloudVersion', "Greenwich.SR6")
    set('alibabaCloudVersion', "2.1.1.RELEASE")
    set('springBootVersion', "2.1.18.RELEASE")
    set('ishareCloudVersion', "1.0.0")

}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${alibabaCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "top.dddpeter.ishare.cloud:ishare-cloud:${ishareCloudVersion}"
    }
}
group = 'top.dddpeter.ishare.cloud'
version = '1.0.0'
description = 'ishare-gateway'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
